"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# New in django 3.2:
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

os.environ['HTTPS'] = os.environ.get("HTTPS", default="on")
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# This will need some tweaking for the future where we are in more than one zone
# TIME_ZONE = 'America/Los_Angeles' # Set to UTC below, this is being ignored

# need to check this before golive:
# TOKEN_EXPIRED_AFTER_SECONDS = 86400
TOKEN_EXPIRED_AFTER_SECONDS = 1209600

# TOKEN_EXPIRED_AFTER_SECONDS = 300
CORS_ORIGIN_ALLOW_ALL = True

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/
DATA_UPLOAD_MAX_MEMORY_SIZE = 41943040
FILE_UPLOAD_MAX_MEMORY_SIZE = 41943040
DATA_UPLOAD_MAX_NUMBER_FIELDS = 100000

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mw^rf)hvx45pnzyjlgg*lkux@k6h30iut5$7wp4!_@2*c$%+*('
ENCRYPT_KEY = b'2faW0g61jp_0WdGqZbwo1iYWfoU1COCCULI0PDvsOpk='
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

LSDB_BUILD = os.environ.get('REACT_APP_LSDB_BUILD', 'DEVELOPMENT')
# ALLOWED_HOSTS = ['*']

if 'WEBSITE_SITE_NAME' in os.environ:
    ALLOWED_HOSTS = [os.environ['WEBSITE_SITE_NAME'] + '.azurewebsites.net', '127.0.0.1']
    SECURE_SSL_REDIRECT = True  # [1]
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    DEFAULT_FILE_STORAGE = 'backend.custom_azure.AzureMediaStorage'
    STATICFILES_STORAGE = 'backend.custom_azure.AzureStaticStorage'

    STATIC_LOCATION = "static"
    MEDIA_LOCATION = "media"

    AZURE_ACCOUNT_NAME = "haveblueazdev"
    AZURE_CUSTOM_DOMAIN = f'{AZURE_ACCOUNT_NAME}.blob.core.windows.net'
    STATIC_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
    MEDIA_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{MEDIA_LOCATION}/'

    # production email setting:
    CLIENT_HOST = 'https://lsdb.pvel.com'.format(os.environ['WEBSITE_SITE_NAME'])
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'smtp.office365.com'
    EMAIL_PORT = 587
    EMAIL_HOST_USER = 'support@pvel.com'
    EMAIL_HOST_PASSWORD = 'Wow41040'
    EMAIL_USE_TLS = True
    EMAIL_USE_SSL = False
else:
    ALLOWED_HOSTS = ['*']
    # local email stub settings:
    TMP_ROOT = os.path.join(BASE_DIR, 'lsdb', 'tmp')
    CLIENT_HOST = 'http://localhost:3000'
    EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
    EMAIL_FILE_PATH =os.path.join(TMP_ROOT, 'app-messages') # change this to a proper location

    STATIC_URL = '/static/'
    # This should be replaced with the cache system when we're there
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'django_filters',
    'lsdb.apps.LsdbConfig',
    'rest_framework_tracking',
    'rest_framework.authtoken',
    'storages',

]



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000']
CORS_REPLACE_HTTPS_REFERER = True


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'haveblueuatdb',
#         'HOST': 'flexibleportolaprod.postgres.database.azure.com',
#         'USER': 'portolaprodFleixble',
#         'PASSWORD': 'Gesa@2023',
#         "PORT": "5432",
#         # 'OPTIONS': {'sslmode': 'require'},
#     }
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'HaveBlueDevDB',
        'HOST': 'haveblueprod.postgres.database.azure.com',
        'USER': 'HaveBlueDBAdmin@haveblueprod',
        'PASSWORD': 'HaveBlueP4ss!',
        "PORT": "5432",
        # 'OPTIONS': {'sslmode': 'require'},
    }
}
# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

REST_FRAMEWORK = {
    # Some settings copied from Portola for later:
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'lsdb.authentication.ExpiringTokenAuthentication',  # custom authentication class
        # 'rest_framework.authentication.TokenAuthentication', # May be the right way to go.
        'rest_framework.authentication.SessionAuthentication',
    ),
    # 'DEFAULT_FILTER_BACKENDS': [
    #     'rest_framework_filters.backends.RestFrameworkFilterBackend',
    #     'rest_framework_filters.backends.ComplexFilterBackend',
    #     'rest_framework.filters.OrderingFilter',
    #     # 'django_filters.rest_framework.DjangoFilterBackend'
    #     ],
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_PAGINATION_CLASS': 'lsdb.pagination.CustomPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    # Not using built-in versioning.
    # 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
    # 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.URLPathVersioning',
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# Only use azure storages ON Azure
# if True: #debugging only
# if 'WEBSITE_SITE_NAME' in os.environ:
#     DEFAULT_FILE_STORAGE = 'backend.custom_azure.AzureMediaStorage'
#     STATICFILES_STORAGE = 'backend.custom_azure.AzureStaticStorage'
#
#     STATIC_LOCATION = "static"
#     MEDIA_LOCATION = "media"
#
#     AZURE_ACCOUNT_NAME = "haveblueazdev"
#     AZURE_CUSTOM_DOMAIN = f'{AZURE_ACCOUNT_NAME}.blob.core.windows.net'
#     STATIC_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
#     MEDIA_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{MEDIA_LOCATION}/'
#
#     # production email setting:
#     CLIENT_HOST = 'https://portal.pvel.com'
#     EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#     EMAIL_HOST = 'smtp.office365.com'
#     EMAIL_PORT = 587
#     EMAIL_HOST_USER = 'support@pvel.com'
#     EMAIL_HOST_PASSWORD = 'Wow41040'
#     EMAIL_USE_TLS = True
#     EMAIL_USE_SSL = False
# else:
#     # local email stub settings:
#     TMP_ROOT = os.path.join(BASE_DIR, 'lsdb','tmp')
#     CLIENT_HOST = 'http://localhost:3000'
#     EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
#     EMAIL_FILE_PATH =os.path.join(TMP_ROOT, 'app-messages') # change this to a proper location
#     CLIENT_HOST = 'http://localhost:3000'
#
#     STATIC_URL = '/static/'
#     # This should be replaced with the cache system when we're there
#     MEDIA_URL =  '/media/'
#     MEDIA_ROOT = os.path.join(BASE_DIR, "media")
